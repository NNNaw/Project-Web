@model WebFinal.Models.tbl_Account

@{
    ViewBag.Title = "SignUp";
    Layout = "~/Areas/Admin/Views/Shared/_layoutAccount.cshtml";
}
    <style>
        .wrap-input100 {
            margin-bottom: 10px;
        }
    </style>
<div class="limiter">
    <div class="container-login100">
        <div class="wrap-login100 p-l-55 p-r-55 p-t-65 p-b-50">
            @using (Html.BeginForm("SignUp", "Customer"))
            {
            <form class="login100-form validate-form">


                <h3 class="login100-form-title p-b-33">
                    Đăng Ký
                </h3>
                <div class="wrap-input100 rs1 validate-input" data-validate="Yêu cầu không bỏ trống">

                    @Html.TextBoxFor(x => x.username, new { @class = "form-control input100", @placeholder = "Tài Khoản" })
                    @Html.ValidationMessageFor(x => x.username)

                </div>
                <div class="wrap-input100 rs1 validate-input" data-validate="Yêu cầu không bỏ trống">

                    @Html.PasswordFor(x => x.password, new { @class = "form-control input100", @id = "Password", @placeholder = "Mật Khẩu" })
                    @Html.ValidationMessageFor(x => x.password)

                </div>
                <div class="wrap-input100 rs1 validate-input" data-validate="Yêu cầu không bỏ trống">

                    @Html.TextBoxFor(x => x.displayName, new { @class = "form-control input100", @placeholder = "Tên Hiển Thị" })
                    @Html.ValidationMessageFor(x => x.displayName)

                </div>

                <div class="wrap-input100 validate-input" data-validate="Yêu cầu không bỏ trống">


                    @Html.TextBoxFor(x => x.email, new { @class = "form-control input100", @placeholder = "Email" })
                    @Html.ValidationMessageFor(x => x.email)

                </div>



                @*<div class="wrap-input100 rs1 validate-input" data-validate="Yêu cầu nhập mật khẩu">

            @Html.PasswordFor(x => x.repassword, new { @class = "form-control input100", @id = "Password", @placeholder = "Mật Khẩu" })
            @Html.ValidationMessageFor(x => x.repassword)

        </div>*@


                <div class="wrap-input100 rs1 validate-input" data-validate="Yêu cầu không bỏ trống">

                    @Html.TextBoxFor(x => x.phonenumber, new { @class = "form-control input100", @placeholder = "Số Điện Thoại" })
                    @Html.ValidationMessageFor(x => x.phonenumber)

                </div>

                @*<div class="wrap-input100 rs1 validate-input" data-validate="Chưa chọn file">

                    @Html.TextBoxFor(model => model.imageUser, htmlAttributes: new { @class = "form-control input100", type = "file", name = "imgfile" })
                    @Html.ValidationMessageFor(x => x.imageUser)
                    <div class="col-md-10">
                <input type="file" name="imgfile" class="form-control" required="required" />
                @Html.ValidationMessageFor(x => x.imageUser)
                </div>

                </div>*@

                <div class="container-login100-form-btn m-t-20">
                    <p style="color:red">@ViewBag.Error</p>

                </div>
                <div class="container-login100-form-btn m-t-20">
                    <input class="login100-form-btn" type="submit" value="Đăng Ký" />
                </div>

                <div class="text-center p-t-45 p-b-4">
                    <span class="txt1">
                        Quên
                    </span>

                    <a href="#" class="txt2 hov1">
                        Mật khẩu?
                    </a>
                </div>

                <div class="text-center">
                    <span class="txt1">
                        @Html.ActionLink("Đăng Nhập", "Login", "User")
                    </span>


                </div>


            </form>
            }

        </div>
    </div>


</div>


